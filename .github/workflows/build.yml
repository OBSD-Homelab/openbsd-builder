name: Build VM Disk Image

on:
  push:
    branches: '*'
    tags: 'v*'
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
        matrix:
          version:
            - 6.8

          architecture:
            # - x86-64
            - arm64

    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install Dependecies
        run: sudo apt install "qemu-system-$QEMU_ARCHITECTURE" -y
        env:
          QEMU_ARCHITECTURE: ${{
              matrix.architecture == 'x86-64' && 'x86' ||
              matrix.architecture == 'arm64' && 'aarch64' ||
              matrix.architecture
            }}

      - name: Download Packer
        run: |
          curl -o packer.zip -L https://releases.hashicorp.com/packer/1.7.1/packer_1.7.1_linux_amd64.zip
          unzip packer.zip

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      # - name: Build Image
      #   run: |
      #     PACKER_LOG=1 ./packer build \
      #       -var-file "var_files/common.pkrvars.hcl" \
      #       -var-file "var_files/github.pkrvars.hcl" \
      #       -var-file "var_files/${{ matrix.architecture }}/common.pkrvars.hcl" \
      #       -var-file "var_files/${{ matrix.architecture }}/github.pkrvars.hcl" \
      #       -var-file "var_files/${{ matrix.version }}/common.pkrvars.hcl" \
      #       -var-file "var_files/${{ matrix.version }}/${{ matrix.architecture }}.pkrvars.hcl" \
      #       openbsd.pkr.hcl
      #
      # - name: Extract Version
      #   id: version
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
      #
      # - name: Create Release
      #   id: create_release
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     name: OpenBSD ${{ steps.version.outputs.VERSION }}
      #     draft: true
      #     files: output/*
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Build VM Disk Image

on:
  push:
    branches: master
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container: ubuntu:22.10
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        version:
          - snapshots

        architecture:
          - x86-64
          - arm64

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install Dependecies
        if: steps.openbsd-current.outputs.cache-hit != 'true'
        run: |
          apt update
          apt install -y curl unzip "qemu-system-${QEMU_ARCHITECTURE}"
        env:
          QEMU_ARCHITECTURE: ${{
              matrix.architecture == 'x86-64' && 'x86' ||
              matrix.architecture == 'arm64' && 'aarch64' ||
              matrix.architecture
            }}

      - name: Find snapshot variables
        if: ${{ matrix.version == 'snapshots' }}
        run: |
          bash create_vars.sh ${OBSD_ARCH} ${LOCAL_ARCH}
          echo "SNAP_SUM=$(cat checksum)" >> ${GITHUB_ENV}
          echo "LOCAL_ARCH=${LOCAL_ARCH}" >> ${GITHUB_ENV}
          echo "OBSD_ARCH=${OBSD_ARCH}" >> ${GITHUB_ENV}
          echo "WORKFLOW_TYPE = ${{ github.event_name }}"
        env:
          OBSD_ARCH: ${{
              matrix.architecture == 'x86-64' && 'amd64' ||
              matrix.architecture
            }}
          LOCAL_ARCH: ${{ matrix.architecture }}

      - uses: hashicorp/setup-packer@main
        with:
          version: "1.7.1"

      - name: Cache OpenBSD-current checksum
        id: openbsd-current
        uses: actions/cache@v3
        with:
          path: output
          key: ${{ env.SNAP_SUM }}-output


      - name: Install UEFI
        if: ${{ matrix.architecture == 'x86-64' && steps.openbsd-current.outputs.cache-hit != 'true' }}
        run: |
          apt install ovmf
          cp /usr/share/ovmf/OVMF.fd resources/ovmf.fd

      - name: Download QEMU UEFI
        if: ${{ matrix.architecture == 'arm64' && steps.openbsd-current.outputs.cache-hit != 'true' }}
        run: curl -o resources/qemu_efi.fd -L http://releases.linaro.org/components/kernel/uefi-linaro/latest/release/qemu64/QEMU_EFI.fd

      - name: Build Image
        if: steps.openbsd-current.outputs.cache-hit != 'true'
        run: |
          PACKER_LOG=1 ./build.sh \
            '${{ matrix.version }}' \
            '${{ matrix.architecture }}' \
            -var 'headless=true' \
            -var 'readonly_boot_media=false'

      - name: Create qcow2 signature
        if: steps.openbsd-current.outputs.cache-hit != 'true'
        run: |
          sha256sum output/openbsd-snapshots-${LOCAL_ARCH}.qcow2 > output/openbsd-snapshots-${LOCAL_ARCH}.sig

      - name: Create current release
        if: ${{ steps.openbsd-current.outputs.cache-hit != 'true' || github.event_name == 'workflow_dispatch' }}
        continue-on-error: true
        uses: pyTooling/Actions/releaser@r0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: current
          files:
            output/openbsd-snapshots*
